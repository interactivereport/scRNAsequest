[["index.html", "scRNASequest: an ecosystem of scRNA-seq analysis, visualization and publishing Chapter 1 Preface", " scRNASequest: an ecosystem of scRNA-seq analysis, visualization and publishing Kejie Li Biogen kejie.li@biogen.com Zhengyu Ouyang BioInfoRx oyoung@bioinforx.com Yu (Henry) Sun Biogen yuhenry.sun@biogen.com Soumya Negi Biogen soumya.negi@biogen.com Wanli Wang Biogen wanli.wang@biogen.com Yirui Chen Biogen yirui.chen@biogen.com Sarbottam Piya Biogen sarbottam.piya@biogen.com Wenxing Hu Biogen wenxing.hu@biogen.com Maria Zavodszky Biogen maria.zavodszky@biogen.com Hima Yalamanchili Biogen hima.yalamanchili@biogen.com Shaolong Cao Biogen shaolong.cao@biogen.com Andrew Gehrke Biogen andrew.gehrke@biogen.com Mark Sheehan Biogen make.sheehan@biogen.com Dann Huh Biogen dann.huh@biogen.com Fergal Casey Biogen fergal.casey@biogen.com Baohong Zhang (Corresponding Author) Biogen baohong.zhang@biogen.com These authors contribute equally Kejie Li, Zhengyu Ouyang 2022-06-27 Chapter 1 Preface This is a user manual written using Bookdown, which provides a detailed guide for scRNASequest. "],["introduction.html", "Chapter 2 Introduction", " Chapter 2 Introduction scRNASequest is a semi-automated single-cell RNA-seq (scRNA-seq) data analysis workflow which allows the following five different functionalities: Pre-processing from raw single-cell RNA sequencing data, Batch correction by one or multiple harmonization methods, Reference-dataset-based cell type label transfer and embedding projection, Multi-sample multi-condition single-cell level differential gene expression analysis Seamless integration with cellxgene VIP for visualization and with CellDepot for data hosting and sharing by generating a compatible h5ad file. Users have the option to run it on a local laptop computer or interact with sge/slurm schedulers on high performance computing (HPC) clusters. This pipeline contains two main programs: scAnalyzer This is the main script in scRNASequest for single-cell data processing and analysis. Through running scAnalyzer, a directory will be generated based on the date of running the pipeline. For example, sc20220506_0 will be created since today is 2022-05-06. If the user runs scAnalyzer again for the same dataset, the last digit will add up to avoid duplications: sc20220328_1. Also, scAnalyzer is an all-in-one program for downstream data analysis, including pre-processing, batch correction, label transfer, differential gene expression analysis and CellDepot integration. Moreover, scAnalyzer is embedded with a Bookdown report generator, which can produce a user-friendly, well-structured quality control report after each run. scRef scRef generates a reference dataset for label transfer. For each reference dataset, this program only needs to run once, and the reference h5ad file will be placed in a permanent path. "],["installation.html", "Chapter 3 Installation 3.1 Install scRNASequest 3.2 Install cellxgene_VIP 3.3 Install CellDepot", " Chapter 3 Installation 3.1 Install scRNASequest First, we install the scRNASequest by downloading the scripts from GitHub: git clone https://github.com/interactivereport/scRNAsequest.git cd scRNAsequest #Install scRNAsequest conda environment and R packages #Please make sure you have conda installed before, and this step may take a while (30min ~1 hour) bash install #Activate the conda environment conda activate scRNAsequest #Also, .env will be created under the src directory: ls ~/scRNAsequest/src/.env #Check the path of current directory and add it to $PATH: CurrentDir=`pwd` export PATH=&quot;$CurrentDir:$PATH&quot; #However, the above command only adds the scRNAsequest directory to $PATH temporarily #To add it to the environment permanently, edit ~/.bash_profile or ~/.bashrc: vim ~/.bash_profile #Add the full path of the scRNAsequest directory to $PATH, for example, $HOME/scRNAsequest PATH=$PATH:$HOME/RNAsequest #Source the file source ~/.bash_profile If the installation is successful, scAnalyzer and scRef should be able to run without passing any parameters: $ scAnalyzer ***** 2022-06-23 17:40:17 ***** ########### ## scRNAsequest: https://github.com/interactivereport/scRNAsequest.git ## Pipeline Path: /camhpc/ngs/tools/scRNAsequest ## Pipeline Date: 2022-06-23 15:00:23 -0400 ## git HEAD: 61d9e676d31849ccc8ac8a3442704128504be248 ########### scAnalyzer /path/to/a/DNAnexus/download/folder === or === scAnalyzer /path/to/a/config/file The config file will be generated automatically when a DNAnexus download folder is provided Available reference data: human_cortex: more information @ https://azimuth.hubmapconsortium.org/references/ human_fetal: more information @ https://azimuth.hubmapconsortium.org/references/ human_pbmc: more information @ https://azimuth.hubmapconsortium.org/references/ mouse_thalamus: more information @ http://omicsoft01.hpc.biogen.com/celldepot/app/core/app_project_review.php?ID=301 mouse_cortex: more information @ https://azimuth.hubmapconsortium.org/references/ mouse_spinalCord: more information @ http://omicsoft01.hpc.biogen.com/celldepot/app/core/app_project_review.php?ID=285 mouse_telencephalon_diencephalon: more information @ https://www.ebi.ac.uk/arrayexpress/experiments/E-MTAB-11115/ NHP_Substantia_nigra: more information @ search NHP_Substantia_nigra in celldepot @ http://omicsoft01.hpc.biogen.com/celldepot NHP_Cerebellum: more information @ search NHP_Cerebellum in celldepot @ http://omicsoft01.hpc.biogen.com/celldepot If one of the above can be used as a reference for your datasets, please update the config file with the name in &#39;ref_name&#39;. Powered by the Research Data Sciences Group [zhengyu.ouyang@biogen.com;kejie.li@biogen.com] ------------ Typing scRef directly without any parameters will activate the user manual page: $ scRef ***** 2022-06-23 17:38:28 ***** ########### ## scRNAsequest: https://github.com/interactivereport/scRNAsequest.git ## Pipeline Path: /camhpc/ngs/tools/scRNAsequest ## Pipeline Date: 2022-06-23 15:00:23 -0400 ## git HEAD: 61d9e676d31849ccc8ac8a3442704128504be248 ########### Loading resources scRef /path/to/a/output/folder === or === scRef /path/to/a/Ref/config/file The folder has to be existed. The Ref config file will be generated automatically when a path is provided ===== CAUTION ===== 1. This process will add a seurat reference data into the scRNAsequest pipeline PERMANENTLY! 2. Make sure the data provided for reference building is SCT transformed! Powered by the Research Data Sciences group [zhengyu.ouyang@biogen.com;kejie.li@biogen.com] ------------ 3.2 Install cellxgene_VIP The cellxgene_VIP platform can be used to visualize the h5ad file generated by the scRNASequest pipeline. This visualization step can be performed before the differential expression (DE) analysis to pinpoint meaningful clusters for downstream steps. Please follow the detailed instructions below to install cellxgene_VIP: https://github.com/interactivereport/cellxgene_VIP However, it is up to the user how to visualize the h5ad file, and other tools with similar functions (scanpy or Seurat) will also work. 3.3 Install CellDepot Please refer to the detailed instructions below to install CellDepot: https://celldepot.bxgenomics.com/celldepot_manual/install_environment.php The installation of CellDepot is also optional if the user only needs to analyze the data, without publishing it into the CellDepot database. "],["data-preparation.html", "Chapter 4 Data preparation 4.1 Public data in h5 format 4.2 Public data in 10X MEX format 4.3 Self-prepared files", " Chapter 4 Data preparation scRNASequest pipeline is compatible with different single-cell experiment outputs, including the 10X MEX format and the 10X h5 format from Cell Ranger. The user may need to manually separate the annotation file, so that no cell filtering was performed. In this chapter, we will walk through how to prepare the data before running the pipeline. 4.1 Public data in h5 format Here, we first present an example of the data processing steps using a public EMBL EBI dataset: E-MTAB-11115. The nine processed zip files were downloaded and unzipped. There are total 6 data, with 6 corresponding *raw_feature_bc_matrix.h5 files. These files are required by the pipeline: #h5 matrix files -rwxrwxr--. 1 zouyang ngs 165M Oct 25 2021 5705STDY8058280.raw_feature_bc_matrix.h5 -rwxrwxr--. 1 zouyang ngs 165M Oct 25 2021 5705STDY8058281.raw_feature_bc_matrix.h5 -rwxrwxr--. 1 zouyang ngs 156M Oct 25 2021 5705STDY8058282.raw_feature_bc_matrix.h5 -rwxrwxr--. 1 zouyang ngs 162M Oct 25 2021 5705STDY8058283.raw_feature_bc_matrix.h5 -rwxrwxr--. 1 zouyang ngs 149M Oct 25 2021 5705STDY8058284.raw_feature_bc_matrix.h5 -rwxrwxr--. 1 zouyang ngs 177M Oct 25 2021 5705STDY8058285.raw_feature_bc_matrix.h5 This dataset also has cell type annotation files associated with each data. These files are optional to the pipeline, but if you would like to use their cell type labels, it would be better to include them in the sample meta file (See section 5.2). #Annotation files (optional to the pipeline) -rwxrwx---. 1 zouyang ngs 440K Apr 21 16:59 5705STDY8058280.annotation.csv -rwxrwx---. 1 zouyang ngs 446K Apr 21 16:59 5705STDY8058281.annotation.csv -rwxrwx---. 1 zouyang ngs 310K Apr 21 16:59 5705STDY8058282.annotation.csv -rwxrwx---. 1 zouyang ngs 282K Apr 21 16:59 5705STDY8058283.annotation.csv -rwxrwx---. 1 zouyang ngs 157K Apr 21 16:59 5705STDY8058284.annotation.csv -rwxrwx---. 1 zouyang ngs 555K Apr 21 16:59 5705STDY8058285.annotation.csv #A brief look at the annotation file: $ head -3 5705STDY8058280_annotation.csv Cell.ID,sample,annotation_1,annotation_1_print AAACCCAAGGAAGTAG-1,5705STDY8058280,Ext_L25,23_Ext_L25 AAACCCAAGGGCAGTT-1,5705STDY8058280,Ext_L56,24_Ext_L56 If SampleName.metrics_summary.csv files are available, please also add them in the same directory as the h5 files, and the pipeline will use them to generate QC plots, but they are not required files of the pipeline. The expected file names should be: 5705STDY8058280.metrics_summary.csv 5705STDY8058281.metrics_summary.csv 5705STDY8058282.metrics_summary.csv 5705STDY8058283.metrics_summary.csv 5705STDY8058284.metrics_summary.csv 5705STDY8058285.metrics_summary.csv !!! Important Since we don’t provide the path of these metrics_summary.csv files to the pipeline, their prefix SampleName must be consistent with the Sample_Name column in the sample meta file (See section 5.2), so that the pipeline can recognize them automatically. You can certainly rename the files and the corresponding SampleName column if you would like to change the data names and how they appear in the final results. Also, for the metrics_summary.csv file names, the concatenator between the Sample_Name and “metrics_summary.csv” must be “.” so that the pipeline can read them automatically. 4.2 Public data in 10X MEX format Another popular format for single-cell RNA-seq is the MEX format, with an mtx file and associated barcodes file as well as a features file. Here, we use a public dataset from NCBI/GEO: GSE205483 to walk through the procedures for pipeline setup. There are total 4 data, and all the processed data can be downloaded from the Supplementary file section as a tarball: GSE205483_RAW.tar: #Untar the file tar -xvf GSE205483_RAW.tar $ ls -l -rw-rw-r--. 1 ysun4 ysun4 4704844 Jun 2 15:13 GSM6213399_IT_YZ_0309_2904_barcodes.tsv.gz -rw-rw-r--. 1 ysun4 ysun4 260888 Jun 2 15:13 GSM6213399_IT_YZ_0309_2904_features.tsv.gz -rw-rw-r--. 1 ysun4 ysun4 64071180 Jun 2 15:13 GSM6213399_IT_YZ_0309_2904_matrix.mtx.gz -rw-rw-r--. 1 ysun4 ysun4 5474445 Jun 2 15:21 GSM6213400_IT_YZ_0309_2905_barcodes.tsv.gz -rw-rw-r--. 1 ysun4 ysun4 260888 Jun 2 15:21 GSM6213400_IT_YZ_0309_2905_features.tsv.gz -rw-rw-r--. 1 ysun4 ysun4 73218924 Jun 2 15:21 GSM6213400_IT_YZ_0309_2905_matrix.mtx.gz -rw-rw-r--. 1 ysun4 ysun4 4931566 Jun 2 15:30 GSM6213401_IT_YZ_0309_2908_barcodes.tsv.gz -rw-rw-r--. 1 ysun4 ysun4 260888 Jun 2 15:30 GSM6213401_IT_YZ_0309_2908_features.tsv.gz -rw-rw-r--. 1 ysun4 ysun4 53887060 Jun 2 15:30 GSM6213401_IT_YZ_0309_2908_matrix.mtx.gz -rw-rw-r--. 1 ysun4 ysun4 4132528 Jun 2 15:37 GSM6213402_IT_YZ_0322_3125_barcodes.tsv.gz -rw-rw-r--. 1 ysun4 ysun4 260888 Jun 2 15:37 GSM6213402_IT_YZ_0322_3125_features.tsv.gz -rw-rw-r--. 1 ysun4 ysun4 53205493 Jun 2 15:37 GSM6213402_IT_YZ_0322_3125_matrix.mtx.gz Next, these files need to be organized into separate folders for the pipeline to read. In specific, we need to create separate folders for each data, and rename the three files to be: barcodes.tsv.gz, features.tsv.gz, and matrix.mtx.gz. The organized file hierarchy is below: GSE205483/ ├── GSM6213399_IT_YZ_0309_2904 ├── barcodes.tsv.gz ├── features.tsv.gz └── matrix.mtx.gz ├── GSM6213400_IT_YZ_0309_2905 ├── barcodes.tsv.gz ├── features.tsv.gz └── matrix.mtx.gz ├── GSM6213401_IT_YZ_0309_2908 ├── barcodes.tsv.gz ├── features.tsv.gz └── matrix.mtx.gz └── GSM6213402_IT_YZ_0322_3125 ├── barcodes.tsv.gz ├── features.tsv.gz └── matrix.mtx.gz 4.3 Self-prepared files If you have raw data in FASTQ format, please process them using the Cell Ranger pipeline to generate the raw_feature_bc_matrix.h5 and metrics_summary.csv files. Please visit Cell Ranger website here for more details about the outputs, in the “Output files” section. In short, Cell Ranger outputs filtered_feature_bc_matrix.h5 (cells after filtering, recommended to use), raw_feature_bc_matrix.h5 (without filtering), and two folders for MEX format output: filtered_feature_bc_matrix, raw_feature_bc_matrix. In addition, Cell Ranger also has a metrics_summary.csv file generated, which can be provided to scRNASequest. Please re-organize, and if necessary, rename the Cell Ranger output files into the following file structures before running scRNASequest. Below is the file hierarchy for h5 input files (metrics_summary.csv files are suggested to be included, but not required; If cell type classification annotation.csv files are available, it would be better to include them): Project/ ├── Data1.filtered_feature_bc_matrix.h5 ├── Data1.annotation.csv (optional) ├── Data1.metrics_summary.csv (optional) ├── Data2.filtered_feature_bc_matrix.h5 ├── Data2.annotation.csv (optional) ├── Data2.metrics_summary.csv (optional) ... The file hierarchy for MEX files: Project/ ├── Data1 ├── barcodes.tsv.gz ├── features.tsv.gz └── matrix.mtx.gz ├── Data2 ├── barcodes.tsv.gz ├── features.tsv.gz └── matrix.mtx.gz ... "],["input-configuration.html", "Chapter 5 Input configuration 5.1 Prepare the config.yml file 5.2 Prepare the sample meta file 5.3 File hierarchy", " Chapter 5 Input configuration First, make sure the .env has been created in the src folder under the pipeline directory: ls ~/scRNAsequest/src/.env 5.1 Prepare the config.yml file To run the scRNAsequest pipeline, a config.yml file is required to be filled in. Please use the following template as an example to prepare this file: config.yml ## Project info and filtering parameters prj_name: E-MTAB-11115 #required, project name prj_title: &quot;Cell2location maps fine-grained cell types in spatial transcriptomics&quot; #required, and quotes might be needed ref_name: #optional. You can choose one from scAnalyzer call without an argument output: /home/ysun4/E-MTAB-11115/ #required, output path sample_name: Sample_Name sample_meta: ~/E-MTAB-11115/sampleMeta.csv #required, sample meta information, see section 5.1 gene_group: MT: startwith: [&quot;MT-&quot;,&quot;Mt-&quot;,&quot;mt-&quot;] cutoff: 20 # percentage cutoff to filter out the cells (larger than this cutoff) rm: False RP: startwith: [] cutoff: 20 rm: False filter_step: True #if False, the above &#39;gene_group&#39; filtering will be skipped as well min.cells: 3 #filtering genes by minimal cell min.features: 50 #filtering cells by minimal genes highCount.cutoff: 10000 #any cells with higher total counts to be removed highGene.cutoff: 3000 #any cells with a higher number of detected genes to be removed group: #if provided, a 10X QC box plot will be ploted in QC plot runAnalysis: True newProcess: False parallel: False #&quot;sge&quot; or &quot;slurm&quot; core: 2 overwrite: True #parallelTime: 180 #for a job (not the entire pipeline) in minutes, default 3hr ## DEG analysis for an annotation (such as disease vs health) within a cell type annotation DEG_desp: ~/E-MTAB-11115/DEGinfo.csv #required for DEG analysis, but you can leave this empty if not going to run DEG # Please be causion of changing the following default filtering min.cells.per.gene: 3 min.genes.per.cell: 250 min.perc.cells.per.gene: 0.00 perc_filter: TRUE R6_min.cells.per.gene: 3 R6_min.perc.cells.per.gene: 0.1 R6_min.cells.per.gene.type: &quot;or&quot; R6_cells.per.gene.filter: TRUE R6_perc.cells.filter: TRUE R6_perc.filter: FALSE R6_perc.filter.type: &quot;and&quot; R6_perc_threshold: 0.90 R6_min.ave.pseudo.bulk.cpm: 1 R6_pseudo.bulk.cpm.filter: FALSE R6_min.cells.per.subj: 3 ## publish to celldepot publish: False In the first run (see the below scAnalyzer section on how to run the pipeline), the user can set runAnalysis: False and use the above default parameters to perform cell filtering and QC. Then this pipeline will only run basic QC checking and output a Bookdown report with QC figures. This step is semi-automated because different datasets may need distinct filtering criteria. The design of this pipeline is to pause here to make sure the filtering step is adequate before running through the whole analysis. Once the filtering step is validated by checking the QC report, the user can change the following settings and run the full analysis: runAnalysis: True overwrite: True 5.2 Prepare the sample meta file The sample meta file, usually named as sampleMeta.csv, is a csv file storing data information. The minimal columns for this file are Sample_Name (This name can be changed, but it must be consistent with the sample_name in the config.yml file) and h5path. If you have the cell type annotation information, you can provide is by adding a column called metapath. For other information, you can add as many columns in this csv file and the column names can be defined by yourself. 5.2.1 h5 input Here is an example with minimal information for the public dataset E-MTAB-11115 (10X h5 format): Sample_Name,h5path 5705STDY8058280,~/E-MTAB-11115/data/5705STDY8058280.filtered_feature_bc_matrix.h5 5705STDY8058281,~/E-MTAB-11115/data/5705STDY8058281.filtered_feature_bc_matrix.h5 5705STDY8058282,~/E-MTAB-11115/data/5705STDY8058282.filtered_feature_bc_matrix.h5 5705STDY8058283,~/E-MTAB-11115/data/5705STDY8058283.filtered_feature_bc_matrix.h5 5705STDY8058284,~/E-MTAB-11115/data/5705STDY8058284.filtered_feature_bc_matrix.h5 5705STDY8058285,~/E-MTAB-11115/data/5705STDY8058285.filtered_feature_bc_matrix.h5 Another example if you would like to use the cell type annotation defined by their analysis, which can be included in the metapath column. Moreover, the user has the freedom to provide further information such as sex and age: Sample_Name,h5path,metapath,sex,age 5705STDY8058280,~/E-MTAB-11115/data/5705STDY8058280_filtered_feature_bc_matrix.h5,~/E-MTAB-11115/data/5705STDY8058280_annotation.csv,Female,56d 5705STDY8058281,~/E-MTAB-11115/data/5705STDY8058281_filtered_feature_bc_matrix.h5,~/E-MTAB-11115/data/5705STDY8058281_annotation.csv,Female,56d 5705STDY8058282,~/E-MTAB-11115/data/5705STDY8058282_filtered_feature_bc_matrix.h5,~/E-MTAB-11115/data/5705STDY8058282_annotation.csv,Female,56d 5705STDY8058283,~/E-MTAB-11115/data/5705STDY8058283_filtered_feature_bc_matrix.h5,~/E-MTAB-11115/data/5705STDY8058283_annotation.csv,Male,56d 5705STDY8058284,~/E-MTAB-11115/data/5705STDY8058284_filtered_feature_bc_matrix.h5,~/E-MTAB-11115/data/5705STDY8058284_annotation.csv,Male,56d 5705STDY8058285,~/E-MTAB-11115/data/5705STDY8058285_filtered_feature_bc_matrix.h5,~/E-MTAB-11115/data/5705STDY8058285_annotation.csv,Male,56d 5.2.2 MEX input Since each data has three MEX files (barcodes.tsv.gz, features.tsv.gz and matrix.mtx.gz), here we provide the path to each MEX result directory. The minimal information in the sample meta file: Sample_Name,h5path miR155cKO_rep1,~/10XGenomicsData/GSM6213399_IT_YZ_0309_2904 WT_rep1,~/10XGenomicsData/GSM6213400_IT_YZ_0309_2905 WT_rep2,~/10XGenomicsData/GSM6213401_IT_YZ_0309_2908 miR155cKO_rep2,~/10XGenomicsData/GSM6213402_IT_YZ_0322_3125 Another example with additional information: Sample_Name,h5path,Genotype,Sex miR155cKO_rep1,~/10XGenomicsData/GSM6213399_IT_YZ_0309_2904,miR155cKO,Female WT_rep1,~/10XGenomicsData/GSM6213400_IT_YZ_0309_2905,WT,Female WT_rep2,~/10XGenomicsData/GSM6213401_IT_YZ_0309_2908,WT,Female miR155cKO_rep2,~/10XGenomicsData/GSM6213402_IT_YZ_0322_3125,miR155cKO,Female 5.3 File hierarchy Before running the pipeline, please check the file hierarchy. Here are examples for h5 and MEX inputs, and we suggest creating a separate folder (such as processing) to store the config.yml and sampleMeta.csv files. The output files will be generated in the directory specified in config.yml. For data downloaded in 10X h5 format: E-MTAB-11115/ ├── data ├── 5705STDY8058280_annotation.csv (optional) ├── 5705STDY8058280_raw_feature_bc_matrix.h5 ├── 5705STDY8058281_annotation.csv (optional) ├── 5705STDY8058281_raw_feature_bc_matrix.h5 ... ├── processing ├── config.yml └── sampleMeta.csv For data downloaded in 10X MEX format: GSE205483/ ├── GSM6213399_IT_YZ_0309_2904 ├── barcodes.tsv.gz ├── features.tsv.gz └── matrix.mtx.gz ├── GSM6213400_IT_YZ_0309_2905 ├── barcodes.tsv.gz ├── features.tsv.gz └── matrix.mtx.gz ... ├── processing ├── config.yml └── sampleMeta.csv "],["running-the-pipeline.html", "Chapter 6 Running the pipeline 6.1 Initial scAnalyzer run 6.2 Review the bookdown report 6.3 Run the full analysis 6.4 Visualize the harmonized results", " Chapter 6 Running the pipeline After preparing the input data and configuration files (config.yml and sampleMeta.csv), we are ready to run the pipeline. Please be aware that scRNASequest is a semi-automated pipeline, and certain steps require the user to review the outputs and determine the parameters. Thus, the same step may need to be run for more than once. 6.1 Initial scAnalyzer run The initial scAnalyzer run intends to test the default filtering parameters on the single-cell RNA-seq data. We suggest the following settings in the config.yml file to activate the filtering step, but pause the pipeline from additional analysis (such as data integration, harmonization, etc.): # Change the following settings in the config.yml file: filter_step: True runAnalysis: False To run scAnalyzer, simply pass the path to the config.yml file to the program: scAnalyzer Path/to/a/config/file #Example: scAnalyzer ~/E-MTAB-11115/processing/config.yml Output files: outputdir ├── BookdownReport/ #Full bookdown report folder. This is same as the BookdownReport.tar.gz below ├── config.yml ├── config.yml.20220617.log #log file ├── ProjName_BookdownReport.tar.gz #Bookdown report tar ball. #Please download this file and open the index.html file to view the report ├── ProjName_raw_prefilter.h5ad #h5ad after pre-filtering ├── prefilter.QC.pdf #QC plots before filtering. These plots are included in the Bookdown report ├── postfilter.QC.pdf #QC plots after filtering └── Rmarkdown/ #Source files for the Bookdown report 6.2 Review the bookdown report After the initial scAnalyzer run, a bookdown report, named ProjName_BookdownReport.tar.gz will be generated. Please open the report (index.html) to review cell numbers and figures before and after the filtering step, and adjust the following thresholds in the config.yml file if needed: # Cell filtering parameters in the config.yml file: gene_group: MT: startwith: [&quot;MT-&quot;,&quot;Mt-&quot;,&quot;mt-&quot;] cutoff: 20 #percentage cutoff to filter out the cells (larger than this cutoff) rm: False RP: startwith: [] cutoff: 20 rm: False filter_step: True #if False, the above &#39;gene_group&#39; filtering will be skipped as well min.cells: 3 #filtering genes by minimal cell min.features: 50 #filtering cells by minimal genes highCount.cutoff: 10000 #any cells with higher total counts to be removed highGene.cutoff: 3000 #any cells with a higher number of detected genes to be removed The user may need to adjust the thresholds and rerun scAnalyzer to visualize the results. This step may be repeated until the threshold is adequate for the data. Please find an example of the bookdown report here: E-MTAB-11115 6.3 Run the full analysis After the filtering step is done, we are ready to turn on the runAnalysis parameter and run the full pipeline: # Change the following setting in the config.yml file: runAnalysis: True overwrite: True #Overwrite the previous results if we run this again, for example, after adjusting some parameters. Please also pay attention to the reference data, and if the user would like to turn on the label transfer function for cell type annotation, set the following parameter, for example, using mouse_spinalCord as the reference: ref_name: mouse_spinalCord To check all available references, run scAnalyzer without any parameter. To add new references, please see section 8: Reference Building. Then run the following command again: scAnalyzer Path/to/a/config/file #Example: scAnalyzer ~/E-MTAB-11115/processing/config.yml This step will be time-consuming, and it took ~1 hour for the E-MTAB-11115 data (final cell number: 29511) to finish. For a larger dataset, such as GSE205483 (final cell number: 111,011), the full pipeline took ~7 hours. 6.4 Visualize the harmonized results After running the pipeline, the following files will be generated for each harmonization method (Harmony, Seurat, Liger): outputdir ├── BookdownReport ├── config.yml ├── config.yml.20220615.log ├── Harmony.error #Error messages ├── kBET.error ├── Liger.error ├── SCT.error ├── Seurat.error ├── SeuratRef.error ├── silhouette.error ├── ProjName_BookdownReport.tar.gz #Bookdown report ├── ProjName.h5ad #Final h5 file ├── ProjName_Harmony.h5ad #Harmony ├── ProjName_harmony_py2r_batch.Rdata ├── ProjName_harmony_py2r_pca.Rdata ├── ProjName_harmony_r2py.Rdata ├── ProjName_kBET_umap_k0_100.pdf #kBET score ├── ProjName_liger.csv #Liger ├── ProjName_Liger.h5ad ├── ProjName_liger_hvg.csv ├── ProjName_raw_added.h5ad ├── ProjName_raw.h5ad ├── ProjName_raw_prefilter.h5ad ├── ProjName_SCT.cID #SCT transformation ├── ProjName_SCT.gID ├── ProjName_SCT.h5 ├── ProjName_SCT.h5ad ├── ProjName_SCT.h5.rds ├── ProjName_Seurat.h5ad #Seurat ├── ProjName_seurat_r2py_integrated.csv.gz ├── ProjName_seurat_r2py_integrated.genes.csv.gz ├── ProjName_Silhouette_boxplot_pc50.pdf ├── postfilter.QC.pdf ├── prefilter.QC.pdf ├── Rmarkdown/ └── sampleMeta.csv kBET is a useful metric to evaluate and compare the harmonization results. Here is an example of the ProjName_kBET_umap_k0_100.pdf result: Please review the ProjName.h5ad file for the harmonization result. If you have Cellxgene VIP installed, the visualization will be easier. Here is an example of the ProjName.h5ad project visualized by Cellxgene VIP: "],["differential-expression-de-analysis.html", "Chapter 7 Differential expression (DE) analysis 7.1 Example 1 7.2 Example 2", " Chapter 7 Differential expression (DE) analysis Another critical function of the scRNASequest pipeline is the Differential expression (DE) analysis. By running the steps in Section 6: Running the pipeline, we have performed quality control of the data, and generated an integrated dataset. Before running the DE analysis, the DEGinfo.csv comparison file needs to be prepared: In the DEG comparison file above, “sample”, “cluster”, “group” and “covars” are the annotation headers, and “alt” and “ref” are the two entries from “group” column. The “covars” is optional and can be empty. The DEG is performing between “alt” and “ref” cells from “group” within each entry of “cluster” considering “sample” variations. The “group” variable should contain conditions to compare, such as Mutant v.s. Control. Thus, this pipeline is designed to loop through each cluster, and perform DEG analysis between “alt” v.s. “ref”. Here, this tutorial provides several examples to illustrate the DE analysis in scRNASequest: We use a UMAP with label transferred cell type annotation as an example dataset. Label transfer is strongly suggested if you would like to run DE analysis because the clusters are more meaningful than the original clusters assigned by the software: 7.1 Example 1 In the first example, we would like to run DE analysis between ‘Female’ and ‘Male’ for each cluster annotated by predicted.celltype1. In the first column, we input the header name library_id, which annotates the data sources. Then we add predicted.celltype1 in the cluster column, which allows the pipeline to loop through each cluster in predicted.celltype1. The group column contains the header name storing the comparison groups, and here we use the Sex annotation. Each time, the pipeline can only compare two conditions, such as ‘Female’ and ‘Male’. If the group column contains more groups, please list them in multiple lines in the DEGinfo.csv file. We can also add covars if needed, but this is optional. The default DE analysis is performed by NEBULA. As for the model, NEBULA provides two choices: HL and LN. For more details about them, please refer to the NEBULA manual. Here is the DEGinfo.csv we described above: sample,cluster,group,alt,ref,covars[+ separated],method[default NEBULA],model[default HL] library_id,predicted.celltype1,Sex,Female,Male,,NEBULA,HL After preparing the DEGinfo.csv file, simply add it to the config.yml file: DEG_desp: ~/E-MTAB-11115/processing/DEGinfo.csv Then rerun the pipeline. The pipeline won’t run the previous steps (i.e. filtering, harmonization, etc.) again, so it will directly run the DE analysis based on the harmonized h5ad file. scAnalyzer Path/to/a/config/file #Example: scAnalyzer ~/E-MTAB-11115/processing/config.yml This step may take a few hours to run. The output files will be generated in the directory: outputdir ... previous results #Omitted, see section 6.4 ├── ProjName_scDEG #Folder containing DEG results ├── deg6601_predicted.celltype1_Sex_NEBULA_HL ├── Female.vs.Male_predicted.celltype1:astrocytes_NEBULA.csv #Each comparison has three associated files ├── Female.vs.Male_predicted.celltype1:astrocytes_NEBULA.png ├── Female.vs.Male_predicted.celltype1:astrocytes_NEBULA.QC.pdf ├── Female.vs.Male_predicted.celltype1:discarded_NEBULA.csv ├── Female.vs.Male_predicted.celltype1:discarded_NEBULA.png ├── Female.vs.Male_predicted.celltype1:discarded_NEBULA.QC.pdf ... ├── env.rds ├── ProjName_scDEG.cmd.json ├── deg6601_predicted.celltype1_Sex_NEBULA_HL_astrocytes_Female_Male.error #Standard error messages ├── deg6601_predicted.celltype1_Sex_NEBULA_HL_meninges_schwann_Female_Male.error ├── deg6601_predicted.celltype1_Sex_NEBULA_HL_microglia_Female_Male.error ├── deg6601_predicted.celltype1_Sex_NEBULA_HL_discarded_Female_Male.error ├── deg6601_predicted.celltype1_Sex_NEBULA_HL_endo_vascular_Female_Male.error ├── deg6601_predicted.celltype1_Sex_NEBULA_HL_neurons_Female_Male.error ├── deg6601_predicted.celltype1_Sex_NEBULA_HL_OPC_Female_Male.error └── ProjName_scDEG.db An example of the DE csv table (Female.vs.Male_predicted.celltype1/astrocytes_NEBULA.csv, top 5 rows): In the table below, the most significant gene is Xist, a well-known X-chromosome gene highly expressed in female. Table 7.1: DEG analysis of Female.vs.Male in astrocytes res.tab.ID res.tab.log2FC res.tab.Pvalue res.tab.FDR res.tab.algorithm res.tab.convergence res.tab.metric res.ls.summary.logFC_.Intercept. res.ls.summary.logFC_.GrouPalt res.ls.summary.se_.Intercept. res.ls.summary.se_.GrouPalt res.ls.summary.p_.Intercept. res.ls.summary.p_.GrouPalt res.ls.summary.gene_id res.ls.summary.gene res.ls.overdispersion.Subject res.ls.overdispersion.Cell res.ls.convergence res.ls.algorithm Xist 9.676171 0 0 HL 1 6115.1780 -6.693213 0.1276737 0.0234622 0.0469395 0 0.0065289 1 Rgs20 0.0016728 0.4393152 1 NBGMM (HL) Pnpla7 -1.230034 0 0 HL 1 1653.1553 -9.321192 -0.1694550 0.0534180 0.1065177 0 0.1116405 2 Atp6v1h 0.0064320 0.3327316 1 NBGMM (HL) Etnppl -1.592058 0 0 HL 1 525.8328 -8.511808 0.0917939 0.0282832 0.0565059 0 0.1042691 3 Rb1cc1 0.0001000 0.1725113 1 NBGMM (HL) Zbtb16 -1.448309 0 0 HL 1 1260.9518 -9.896064 -0.0918014 0.0584728 0.1165549 0 0.4309170 4 4732440D04Rik 0.0014745 0.7288504 1 NBGMM (HL) Sorcs2 1.137956 0 0 HL 1 1398.0881 -8.573613 -0.2252848 0.0303869 0.0604625 0 0.0001945 5 Pcmtd1 0.0001000 0.3502587 -10 NBGMM (HL) An example of the DE png file (Female.vs.Male_predicted.celltype1/astrocytes_NEBULA.png): 7.2 Example 2 In the second example, we are going to show how to perform DE analysis between two cell types. To achieve this, we added one artificial column (called ‘SelectAll’) in the sampleMeta.csv file, and assigned the same values (‘Everything’) to all the data: Sample_Name,h5path,Sex,SelectAll 5705STDY8058280,/home/ysun4/testSinglecell/ExternalData/5705STDY8058280_filtered_feature_bc_matrix.h5,Female,Everything 5705STDY8058281,/home/ysun4/testSinglecell/ExternalData/5705STDY8058281_filtered_feature_bc_matrix.h5,Female,Everything 5705STDY8058282,/home/ysun4/testSinglecell/ExternalData/5705STDY8058282_filtered_feature_bc_matrix.h5,Female,Everything 5705STDY8058283,/home/ysun4/testSinglecell/ExternalData/5705STDY8058283_filtered_feature_bc_matrix.h5,Male,Everything 5705STDY8058284,/home/ysun4/testSinglecell/ExternalData/5705STDY8058284_filtered_feature_bc_matrix.h5,Male,Everything 5705STDY8058285,/home/ysun4/testSinglecell/ExternalData/5705STDY8058285_filtered_feature_bc_matrix.h5,Male,Everything Then. we prepare the DEGinfo.csv file in this way. The ‘SelectAll’ was filled into the cluster column, and since it only has one value, it actually selects all cells when running the pipeline. Then it performs astrocytes to Oligos comparison. sample,cluster,group,alt,ref,covars[+ separated],method[default NEBULA],model[default HL] library_id,SelectAll,predicted.celltype1,astrocytes,Oligos,,NEBULA,HL Then we need to run the scRNASequest pipeline from the beginning, which allows the ‘SelectAll’ column to be embedded into the harmonized h5ad output. As long as we have DEGinfo.csv included in the config.yml, it will run through the DE analysis and produce the following results: outputdir ... previous results #Omitted, see section 6.4 ├── ProjName_scDEG #Folder containing DEG results ├── deg6602_SelectAll_predicted.celltype1_NEBULA_HL ├── astrocytes.vs.Oligos_SelectAll:Everything_NEBULA.csv #Each comparison has three associated files ├── astrocytes.vs.Oligos_SelectAll:Everything_NEBULA.png ├── astrocytes.vs.Oligos_SelectAll:Everything_NEBULA.QC.pdf ├── env.rds ├── ProjName_scDEG.cmd.json ├── deg6602_SelectAll_predicted.celltype1_NEBULA_HL_Everything_astrocytes_Oligos.error #Standard error messages └── ProjName_scDEG.db An example of the DE csv table (astrocytes.vs.Oligos_SelectAll:Everything_NEBULA.csv, top 5 rows): Table 7.2: DEG analysis of astrocytes.vs.Oligos res.tab.ID res.tab.log2FC res.tab.Pvalue res.tab.FDR res.tab.algorithm res.tab.convergence res.tab.metric res.ls.summary.logFC_.Intercept. res.ls.summary.logFC_.GrouPalt res.ls.summary.se_.Intercept. res.ls.summary.se_.GrouPalt res.ls.summary.p_.Intercept. res.ls.summary.p_.GrouPalt res.ls.summary.gene_id res.ls.summary.gene res.ls.overdispersion.Subject res.ls.overdispersion.Cell res.ls.convergence res.ls.algorithm Xkr4 -3.327923 0 0 HL 1 4177.156 -8.168075 -2.3067403 0.0367924 0.0561022 0 0.0000000 1 Xkr4 0.0067297 0.6076303 1 NBGMM (HL) Rgs20 6.386205 0 0 HL 1 5561.771 -9.825703 -2.5066029 0.0890548 0.1353916 0 0.0000000 2 Gm1992 0.0398103 1.4947561 1 NBGMM (HL) St18 -5.129500 0 0 HL 1 14283.487 -10.322696 0.2176484 0.0310922 0.0690489 0 0.0016211 3 Mrpl15 0.0001000 0.4188721 1 NBGMM (HL) Adhfe1 4.842192 0 0 HL 1 12162.136 -10.169996 0.1119117 0.0292679 0.0669762 0 0.0947381 4 Tcea1 0.0001000 0.7212448 1 NBGMM (HL) Prex2 8.368190 0 0 HL 1 8249.837 -10.292221 4.4265797 0.0513462 0.0563860 0 0.0000000 5 Rgs20 0.0047768 0.4563594 1 NBGMM (HL) An example of the DE png file (astrocytes.vs.Oligos_SelectAll:Everything_NEBULA.png): "],["reference-building.html", "Chapter 8 Reference Building", " Chapter 8 Reference Building Reference building is critical for label transfer. To add a reference dataset into the scRNASequest pipeline, the reference matrix needs to be SCT transformed. By running the following command, the reference will be added to the pipeline for future use: $ scRef ***** 2022-06-23 17:38:28 ***** ########### ## scRNAsequest: https://github.com/interactivereport/scRNAsequest.git ## Pipeline Path: /camhpc/ngs/tools/scRNAsequest ## Pipeline Date: 2022-06-23 15:00:23 -0400 ## git HEAD: 61d9e676d31849ccc8ac8a3442704128504be248 ########### Loading resources scRef /path/to/a/output/folder === or === scRef /path/to/a/Ref/config/file The folder has to be existed. The Ref config file will be generated automatically when a path is provided ===== CAUTION ===== 1. This process will add a seurat reference data into the scRNAsequest pipeline PERMANENTLY! 2. Make sure the data provided for reference building is SCT transformed! Powered by the Research Data Sciences group [zhengyu.ouyang@biogen.com;kejie.li@biogen.com] ------------ "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
