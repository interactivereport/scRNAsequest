[["index.html", "scRNASequest: an ecosystem of scRNA-seq analysis, visualization and publishing Chapter 1 Preface", " scRNASequest: an ecosystem of scRNA-seq analysis, visualization and publishing Kejie Li Biogen kejie.li@biogen.com Zhengyu Ouyang BioInfoRx oyoung@bioinforx.com Yu (Henry) Sun Biogen yuhenry.sun@biogen.com Soumya Negi Biogen soumya.negi@biogen.com Wanli Wang Biogen wanli.wang@biogen.com Yirui Chen Biogen yirui.chen@biogen.com Sarbottam Piya Biogen sarbottam.piya@biogen.com Wenxing Hu Biogen wenxing.hu@biogen.com Maria Zavodszky Biogen maria.zavodszky@biogen.com Hima Yalamanchili Biogen hima.yalamanchili@biogen.com Shaolong Cao Biogen shaolong.cao@biogen.com Andrew Gehrke Biogen andrew.gehrke@biogen.com Mark Sheehan Biogen make.sheehan@biogen.com Dann Huh Biogen dann.huh@biogen.com Fergal Casey Biogen fergal.casey@biogen.com Baohong Zhang (Corresponding Author) Biogen baohong.zhang@biogen.com These authors contribute equally Kejie Li, Zhengyu Ouyang 2022-05-09 Chapter 1 Preface This is a user manual written using Bookdown, which provides a detailed guide for scRNASequest. "],["introduction.html", "Chapter 2 Introduction", " Chapter 2 Introduction scRNASequest is a semi-automated single cell RNA-seq (scRNA-seq) data analysis workflow which allows the following five different functionalities: Preprocessing from raw single-cell RNA sequencing data, Batch correction by one or multiple harmonization methods, Reference dataset based cell type label transfer and embedding projection, Multi-sample multi-condition single-cell level differential gene expression analysis Seamless integration with cellxgene VIP for visualization and with CellDepot for data hosting and sharing by generating compatible h5ad file. Users have option to run it on local laptop computer or interact with sge/slurm schedulers on high performance computing (HPC) clusters. This pipeline contains two main programs: scAnalyzer This is the main script in scRNASequest for singl-cell data processing and analysis. Through running scAnalyzer, a directory will be generated based on the date of running the pipeline. For example, sc20220506_0 will be created since today is 2022-05-06. If the user runs scAnalyzer again for the same dataset, the last digit will add up to avoid duplications: sc20220328_1. Also, scAnalyzer is an all-in-one program for downstream data analysis, including pre-processing, batch correction, label transfer, differential gene expression analysis and CellDepot integration. scRef scRef generates a reference dataset for label transfer. For each reference dataset, this program only needs to run once, and the reference h5ad file will be placed in a permanant path. "],["installation.html", "Chapter 3 Installation 3.1 Install scRNASequest 3.2 Install CellDepot", " Chapter 3 Installation 3.1 Install scRNASequest First we install the scRNASequest by downloading the scripts from GitHub: git clone https://github.com/interactivereport/scRNAsequest.git cd scRNAsequest #Install scRNAsequest conda environment and R packages #Please make sure you have conda installed before, and this step may take a while (30min ~1 hour) bash install #Activate the conda environment conda activate scRNAsequest #Also, .env will be created under the src directory: ls ~/scRNAsequest/src/.env #Check the path of current directory and add it to $PATH: CurrentDir=`pwd` export PATH=&quot;$CurrentDir:$PATH&quot; #However, the above command only adds the scRNAsequest directory to $PATH temporarily #To add it to the environment permanently, edit ~/.bash_profile or ~/.bashrc: vim ~/.bash_profile #Add the full path of the scRNAsequest directory to $PATH, for example, $HOME/scRNAsequest PATH=$PATH:$HOME/RNAsequest #Source the file source ~/.bash_profile If the installation is successful, scAnalyzer and scRef should be able to run without passing any parameters: $ scAnalyzer ***** 2022-05-06 18:26:41 ***** ########### ## scRNAsequest: https://github.com/interactivereport/scRNAsequest.git ## Pipeline Path: /camhpc/home/zouyang/projects/scRNAsequest ## Pipeline Date: 2022-05-06 15:15:38 -0400 ## git HEAD: ccd9e414b5266d32fbebd89ecfa4a89c20144315 ########### scAnalyzer /path/to/a/DNAnexus/download/folder === or === scAnalyzer /path/to/a/config/file The config file will be generated automatically when a DNAnexus download folder is provided Available reference data: human_cortex: more information @ https://azimuth.hubmapconsortium.org/references/ human_fetal: more information @ https://azimuth.hubmapconsortium.org/references/ human_pbmc: more information @ https://azimuth.hubmapconsortium.org/references/ mouse_thalamus: more information @ http://omicsoft01.hpc.biogen.com/celldepot/app/core/app_project_review.php?ID=301 mouse_cortex: more information @ https://azimuth.hubmapconsortium.org/references/ mouse_spinalCord: more information @ http://omicsoft01.hpc.biogen.com/celldepot/app/core/app_project_review.php?ID=285 mouse_telencephalon_diencephalon: more information @ https://www.ebi.ac.uk/arrayexpress/experiments/E-MTAB-11115/ If one of the above can be used as a reference for your datasets, please update the config file with the name in &#39;ref_name&#39;. Powered by the Research Data Sciences Group [zhengyu.ouyang@biogen.com;kejie.li@biogen.com] Typing scRef directly without any parameters will activate the user manual page: $ scRef *****Mon May 09, 2022 | 10:48:58***** ########### ## scRNAsequest: https://github.com/interactivereport/scRNAsequest.git ## Pipeline Path: /camhpc/home/zouyang/projects/scRNAsequest ## Pipeline Date: %ci ## git HEAD: 48fec4f088c69942ada621434adaa4ae0b66979e ########### Loading resources scRef /path/to/a/output/folder === or === scRef /path/to/a/Ref/config/file The folder will be created if it does not exist. The Ref config file will be generated automatically when a path is provided ===== CAUTION ===== 1. This process will add a seurat reference data into the scRNAsequest pipeline PERMANENTLY! 2. Make sure the data provided for reference building is SCT transformed! Powered by the Research Data Sciences group [zhengyu.ouyang@biogen.com;kejie.li@biogen.com] ------------ 3.2 Install CellDepot Please refer the detailed instructions below to install CellDepot: https://celldepot.bxgenomics.com/celldepot_manual/install_environment.php "],["data-preparation.html", "Chapter 4 Data preparation 4.1 Retrieving data from NCBI GEO 4.2 File hierarchy 4.3 Self-prepared files", " Chapter 4 Data preparation 4.1 Retrieving data from NCBI GEO ExpressionAnalysis requires several input files, which should be organized in specific formats. Here, we present an example of the data processing steps using a public NCBI GEO dataset: SRP199678. The R code recount3.example.R can be run in the terminal under the conda environment created before. conda activate ExpressionAnalysis cd RNASequest/example Rscript recount3.example.R 4.2 File hierarchy After running recount3.example.R, we will have all input files for ExpressionAnalysis with the following hierarchy: SRP199678/ ├── comparison.csv ├── counts.tsv ├── geneAnnotation.csv ├── geneLength.tsv ├── meta.csv └── project.yml 4.3 Self-prepared files For users that have their own dataset to run EA, several files can be prepared from scratch. Here is the detailed instruction on what files are required to run the pipeline. Please use the same file hierarchy as 4.2 after creating them. comparison.csv This file contains comparison groups, which must be defined in the meta.csv. Here is an example of the comparison.csv file: metacol,case,ctrl group,grp2,grp1 group,grp3,grp2 counts.tsv This file stores the raw counts of each sample in a tab-delimited format (tsv). $ head -4 counts.tsv &quot;&quot; &quot;SRR9139048&quot; &quot;SRR9139049&quot; &quot;SRR9139050&quot; &quot;ENSMUSG00000079800.2&quot; 7 9 11 &quot;ENSMUSG00000095092.1&quot; 2 1 10 &quot;ENSMUSG00000079192.2&quot; 7 7 1 geneAnnotation.csv This file contains the detailed annotation of each gene shown in the count.tsv table. Here is an example: $ head -4 geneAnnotation.csv &quot;&quot;,&quot;seqnames&quot;,&quot;start&quot;,&quot;end&quot;,&quot;width&quot;,&quot;strand&quot;,&quot;source&quot;,&quot;type&quot;,&quot;bp_length&quot;,&quot;phase&quot;,&quot;UniqueID&quot;,&quot;gene_type&quot;,&quot;Gene.Name&quot;,&quot;level&quot;,&quot;mgi_id&quot;,&quot;havana_gene&quot;,&quot;tag&quot;,&quot;id&quot; &quot;ENSMUSG00000079800.2&quot;,&quot;GL456210.1&quot;,9124,58882,49759,&quot;-&quot;,&quot;ENSEMBL&quot;,&quot;gene&quot;,1271,NA,&quot;ENSMUSG00000079800.2&quot;,&quot;protein_coding&quot;,&quot;AC125149.3&quot;,&quot;3&quot;,NA,NA,NA,1 &quot;ENSMUSG00000095092.1&quot;,&quot;GL456210.1&quot;,108390,110303,1914,&quot;-&quot;,&quot;ENSEMBL&quot;,&quot;gene&quot;,366,NA,&quot;ENSMUSG00000095092.1&quot;,&quot;protein_coding&quot;,&quot;AC125149.5&quot;,&quot;3&quot;,NA,NA,NA,2 &quot;ENSMUSG00000079192.2&quot;,&quot;GL456210.1&quot;,123792,124928,1137,&quot;+&quot;,&quot;ENSEMBL&quot;,&quot;gene&quot;,255,NA,&quot;ENSMUSG00000079192.2&quot;,&quot;protein_coding&quot;,&quot;AC125149.1&quot;,&quot;3&quot;,NA,NA,NA,3 geneLength.tsv This file has the gene length information. It must match the dimension of the count.tsv file. $ head -4 geneLength.tsv &quot;&quot; &quot;SRR9139048&quot; &quot;SRR9139049&quot; &quot;SRR9139050&quot; &quot;ENSMUSG00000079800.2&quot; 1271 1271 1271 &quot;ENSMUSG00000095092.1&quot; 366 366 366 &quot;ENSMUSG00000079192.2&quot; 255 255 255 meta.csv This meta.csv file can contain many annotation columns for the dataset. For example, this is a meta file containing group information: $ head -4 meta.tsv &quot;&quot;,&quot;group&quot; &quot;SRR9139048&quot;,&quot;grp1&quot; &quot;SRR9139049&quot;,&quot;grp2&quot; &quot;SRR9139050&quot;,&quot;grp3&quot; project.yml The project.yml file contains a high-level summary of the project, including project name, species, etc. $ cat project.yml project: SRP199678 species: mouse file_source: sra project_home: data_sources_sra project_type: data_sources number_samples: 155 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
