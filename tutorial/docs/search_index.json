[["index.html", "scRNASequest: an ecosystem of scRNA-seq analysis, visualization and publishing Chapter 1 Preface", " scRNASequest: an ecosystem of scRNA-seq analysis, visualization and publishing Kejie Li Biogen kejie.li@biogen.com Zhengyu Ouyang BioInfoRx oyoung@bioinforx.com Yu (Henry) Sun Biogen yuhenry.sun@biogen.com Soumya Negi Biogen soumya.negi@biogen.com Wanli Wang Biogen wanli.wang@biogen.com Yirui Chen Biogen yirui.chen@biogen.com Sarbottam Piya Biogen sarbottam.piya@biogen.com Wenxing Hu Biogen wenxing.hu@biogen.com Maria Zavodszky Biogen maria.zavodszky@biogen.com Hima Yalamanchili Biogen hima.yalamanchili@biogen.com Shaolong Cao Biogen shaolong.cao@biogen.com Andrew Gehrke Biogen andrew.gehrke@biogen.com Mark Sheehan Biogen make.sheehan@biogen.com Dann Huh Biogen dann.huh@biogen.com Fergal Casey Biogen fergal.casey@biogen.com Baohong Zhang (Corresponding Author) Biogen baohong.zhang@biogen.com These authors contribute equally Kejie Li, Zhengyu Ouyang 2022-05-10 Chapter 1 Preface This is a user manual written using Bookdown, which provides a detailed guide for scRNASequest. "],["introduction.html", "Chapter 2 Introduction", " Chapter 2 Introduction scRNASequest is a semi-automated single cell RNA-seq (scRNA-seq) data analysis workflow which allows the following five different functionalities: Preprocessing from raw single-cell RNA sequencing data, Batch correction by one or multiple harmonization methods, Reference dataset based cell type label transfer and embedding projection, Multi-sample multi-condition single-cell level differential gene expression analysis Seamless integration with cellxgene VIP for visualization and with CellDepot for data hosting and sharing by generating compatible h5ad file. Users have option to run it on local laptop computer or interact with sge/slurm schedulers on high performance computing (HPC) clusters. This pipeline contains two main programs: scAnalyzer This is the main script in scRNASequest for singl-cell data processing and analysis. Through running scAnalyzer, a directory will be generated based on the date of running the pipeline. For example, sc20220506_0 will be created since today is 2022-05-06. If the user runs scAnalyzer again for the same dataset, the last digit will add up to avoid duplications: sc20220328_1. Also, scAnalyzer is an all-in-one program for downstream data analysis, including pre-processing, batch correction, label transfer, differential gene expression analysis and CellDepot integration. scRef scRef generates a reference dataset for label transfer. For each reference dataset, this program only needs to run once, and the reference h5ad file will be placed in a permanant path. "],["installation.html", "Chapter 3 Installation 3.1 Install scRNASequest 3.2 Install CellDepot", " Chapter 3 Installation 3.1 Install scRNASequest First we install the scRNASequest by downloading the scripts from GitHub: git clone https://github.com/interactivereport/scRNAsequest.git cd scRNAsequest #Install scRNAsequest conda environment and R packages #Please make sure you have conda installed before, and this step may take a while (30min ~1 hour) bash install #Activate the conda environment conda activate scRNAsequest #Also, .env will be created under the src directory: ls ~/scRNAsequest/src/.env #Check the path of current directory and add it to $PATH: CurrentDir=`pwd` export PATH=&quot;$CurrentDir:$PATH&quot; #However, the above command only adds the scRNAsequest directory to $PATH temporarily #To add it to the environment permanently, edit ~/.bash_profile or ~/.bashrc: vim ~/.bash_profile #Add the full path of the scRNAsequest directory to $PATH, for example, $HOME/scRNAsequest PATH=$PATH:$HOME/RNAsequest #Source the file source ~/.bash_profile If the installation is successful, scAnalyzer and scRef should be able to run without passing any parameters: $ scAnalyzer ***** 2022-05-06 18:26:41 ***** ########### ## scRNAsequest: https://github.com/interactivereport/scRNAsequest.git ## Pipeline Path: /camhpc/home/zouyang/projects/scRNAsequest ## Pipeline Date: 2022-05-06 15:15:38 -0400 ## git HEAD: ccd9e414b5266d32fbebd89ecfa4a89c20144315 ########### scAnalyzer /path/to/a/DNAnexus/download/folder === or === scAnalyzer /path/to/a/config/file The config file will be generated automatically when a DNAnexus download folder is provided Available reference data: human_cortex: more information @ https://azimuth.hubmapconsortium.org/references/ human_fetal: more information @ https://azimuth.hubmapconsortium.org/references/ human_pbmc: more information @ https://azimuth.hubmapconsortium.org/references/ mouse_thalamus: more information @ http://omicsoft01.hpc.biogen.com/celldepot/app/core/app_project_review.php?ID=301 mouse_cortex: more information @ https://azimuth.hubmapconsortium.org/references/ mouse_spinalCord: more information @ http://omicsoft01.hpc.biogen.com/celldepot/app/core/app_project_review.php?ID=285 mouse_telencephalon_diencephalon: more information @ https://www.ebi.ac.uk/arrayexpress/experiments/E-MTAB-11115/ If one of the above can be used as a reference for your datasets, please update the config file with the name in &#39;ref_name&#39;. Powered by the Research Data Sciences Group [zhengyu.ouyang@biogen.com;kejie.li@biogen.com] Typing scRef directly without any parameters will activate the user manual page: $ scRef *****Mon May 09, 2022 | 10:48:58***** ########### ## scRNAsequest: https://github.com/interactivereport/scRNAsequest.git ## Pipeline Path: /camhpc/home/zouyang/projects/scRNAsequest ## Pipeline Date: %ci ## git HEAD: 48fec4f088c69942ada621434adaa4ae0b66979e ########### Loading resources scRef /path/to/a/output/folder === or === scRef /path/to/a/Ref/config/file The folder will be created if it does not exist. The Ref config file will be generated automatically when a path is provided ===== CAUTION ===== 1. This process will add a seurat reference data into the scRNAsequest pipeline PERMANENTLY! 2. Make sure the data provided for reference building is SCT transformed! Powered by the Research Data Sciences group [zhengyu.ouyang@biogen.com;kejie.li@biogen.com] ------------ 3.2 Install CellDepot Please refer the detailed instructions below to install CellDepot: https://celldepot.bxgenomics.com/celldepot_manual/install_environment.php "],["data-preparation.html", "Chapter 4 Data preparation 4.1 Public data in h5 format 4.2 Public data in 10X mtx format 4.3 Self-prepared files", " Chapter 4 Data preparation scRNASequest pipeline is compatible with different single-cell experiment outputs, including the 10X mtx folder and the 10X h5 output from cellranger. The user may need to manually separate the annotation file, so that no cell filtering was performed. In this chapter, we will walk through how to prepare the data before running the pipeline. 4.1 Public data in h5 format Here, we first present an example of the data processing steps using a public EMBL EBI dataset: E-MTAB-11115. The nine processed zip files were downloaded and unzipped. There are total 6 datasets, with 6 corresponding *raw_feature_bc_matrix.h5 files: #Annotation files -rwxrwx---. 1 zouyang ngs 440K Apr 21 16:59 5705STDY8058280_annotation.csv -rwxrwx---. 1 zouyang ngs 446K Apr 21 16:59 5705STDY8058281_annotation.csv -rwxrwx---. 1 zouyang ngs 310K Apr 21 16:59 5705STDY8058282_annotation.csv -rwxrwx---. 1 zouyang ngs 282K Apr 21 16:59 5705STDY8058283_annotation.csv -rwxrwx---. 1 zouyang ngs 157K Apr 21 16:59 5705STDY8058284_annotation.csv -rwxrwx---. 1 zouyang ngs 555K Apr 21 16:59 5705STDY8058285_annotation.csv #h5 matrix files -rwxrwxr--. 1 zouyang ngs 165M Oct 25 2021 5705STDY8058280_raw_feature_bc_matrix.h5 -rwxrwxr--. 1 zouyang ngs 165M Oct 25 2021 5705STDY8058281_raw_feature_bc_matrix.h5 -rwxrwxr--. 1 zouyang ngs 156M Oct 25 2021 5705STDY8058282_raw_feature_bc_matrix.h5 -rwxrwxr--. 1 zouyang ngs 162M Oct 25 2021 5705STDY8058283_raw_feature_bc_matrix.h5 -rwxrwxr--. 1 zouyang ngs 149M Oct 25 2021 5705STDY8058284_raw_feature_bc_matrix.h5 -rwxrwxr--. 1 zouyang ngs 177M Oct 25 2021 5705STDY8058285_raw_feature_bc_matrix.h5 4.2 Public data in 10X mtx format Another example is based on the 10X mtx folder output. ?????Waiting for an example 4.3 Self-prepared files For users that have their own dataset to run EA, several files can be prepared from scratch. Here is the detailed instruction on what files are required to run the pipeline. Please use the same file hierarchy as 4.2 after creating them. comparison.csv This file contains comparison groups, which must be defined in the meta.csv. Here is an example of the comparison.csv file: metacol,case,ctrl group,grp2,grp1 group,grp3,grp2 counts.tsv This file stores the raw counts of each sample in a tab-delimited format (tsv). $ head -4 counts.tsv &quot;&quot; &quot;SRR9139048&quot; &quot;SRR9139049&quot; &quot;SRR9139050&quot; &quot;ENSMUSG00000079800.2&quot; 7 9 11 &quot;ENSMUSG00000095092.1&quot; 2 1 10 &quot;ENSMUSG00000079192.2&quot; 7 7 1 geneAnnotation.csv This file contains the detailed annotation of each gene shown in the count.tsv table. Here is an example: $ head -4 geneAnnotation.csv &quot;&quot;,&quot;seqnames&quot;,&quot;start&quot;,&quot;end&quot;,&quot;width&quot;,&quot;strand&quot;,&quot;source&quot;,&quot;type&quot;,&quot;bp_length&quot;,&quot;phase&quot;,&quot;UniqueID&quot;,&quot;gene_type&quot;,&quot;Gene.Name&quot;,&quot;level&quot;,&quot;mgi_id&quot;,&quot;havana_gene&quot;,&quot;tag&quot;,&quot;id&quot; &quot;ENSMUSG00000079800.2&quot;,&quot;GL456210.1&quot;,9124,58882,49759,&quot;-&quot;,&quot;ENSEMBL&quot;,&quot;gene&quot;,1271,NA,&quot;ENSMUSG00000079800.2&quot;,&quot;protein_coding&quot;,&quot;AC125149.3&quot;,&quot;3&quot;,NA,NA,NA,1 &quot;ENSMUSG00000095092.1&quot;,&quot;GL456210.1&quot;,108390,110303,1914,&quot;-&quot;,&quot;ENSEMBL&quot;,&quot;gene&quot;,366,NA,&quot;ENSMUSG00000095092.1&quot;,&quot;protein_coding&quot;,&quot;AC125149.5&quot;,&quot;3&quot;,NA,NA,NA,2 &quot;ENSMUSG00000079192.2&quot;,&quot;GL456210.1&quot;,123792,124928,1137,&quot;+&quot;,&quot;ENSEMBL&quot;,&quot;gene&quot;,255,NA,&quot;ENSMUSG00000079192.2&quot;,&quot;protein_coding&quot;,&quot;AC125149.1&quot;,&quot;3&quot;,NA,NA,NA,3 geneLength.tsv This file has the gene length information. It must match the dimension of the count.tsv file. $ head -4 geneLength.tsv &quot;&quot; &quot;SRR9139048&quot; &quot;SRR9139049&quot; &quot;SRR9139050&quot; &quot;ENSMUSG00000079800.2&quot; 1271 1271 1271 &quot;ENSMUSG00000095092.1&quot; 366 366 366 &quot;ENSMUSG00000079192.2&quot; 255 255 255 meta.csv This meta.csv file can contain many annotation columns for the dataset. For example, this is a meta file containing group information: $ head -4 meta.tsv &quot;&quot;,&quot;group&quot; &quot;SRR9139048&quot;,&quot;grp1&quot; &quot;SRR9139049&quot;,&quot;grp2&quot; &quot;SRR9139050&quot;,&quot;grp3&quot; project.yml The project.yml file contains a high-level summary of the project, including project name, species, etc. $ cat project.yml project: SRP199678 species: mouse file_source: sra project_home: data_sources_sra project_type: data_sources number_samples: 155 "],["running-the-pipeline.html", "Chapter 5 Running the pipeline 5.1 Prepare the config.yml file 5.2 Prepare the sample meta file 5.3 Prepare the comparison file 5.4 File hierarchy 5.5 scAnalyzer 5.6 scRef", " Chapter 5 Running the pipeline First, make sure the .env has been created in the src folder under the pipeline directory: ls ~/scRNAsequest/src/.env 5.1 Prepare the config.yml file To run the scRNAsequest pipeline, a config.yml file is required to fill in. Please use the following template as an example to prepare this file: prj_name: E-MTAB-11115 #required prj_title: Cell2location maps fine-grained cell types in spatial transcriptomics #required # quote might be needed ref_name: # This is optional. You can choose one from scAnalyzer call without argument output: /home/ysun4/E-MTAB-11115/processing #output path sample_name: Sample_Name sample_meta: /home/ysun4/E-MTAB-11115/processing/sampleMeta.csv MTstring: &quot;&quot; #default search &quot;MT-&quot;, &quot;Mt-&quot; and &quot;mt-&quot; rmMT: True min.cells: 0 #filtering genes by minimal cell min.features: 0 #filtering cells by minimal genes mt.cutoff: 100 # any cells with higher MT percentage to be removed highCount.cutoff: 1000000 # any cells with higher total counts to be removed highGene.cutoff: 300000 # any cells with higher number of detected genes to be removed group: #if provided, a 10X QC box plot will be ploted in QC plot runAnalysis: False newProcess: False parallel: sge #&quot;sge&quot; or &quot;slurm&quot; core: 4 overwrite: False #parallelTime: 180 # for a job (not the entire pipeline) in minutes, default 3hr ## DEG analysis for an annotation (such as disease vs health) within a cell type annotation DEG_desp: #required if you would like to perform DEG analysis. Leaving this empty won&#39;t cause error. # Please be causion of changing the following default filtering min.cells.per.gene: 3 min.genes.per.cell: 250 min.perc.cells.per.gene: 0.00 perc_filter: TRUE R6_min.cells.per.gene: 3 R6_min.perc.cells.per.gene: 0.1 R6_min.cells.per.gene.type: &quot;or&quot; R6_cells.per.gene.filter: TRUE R6_perc.cells.filter: TRUE R6_perc.filter: FALSE R6_perc.filter.type: &quot;and&quot; R6_perc_threshold: 0.90 R6_min.ave.pseudo.bulk.cpm: 1 R6_pseudo.bulk.cpm.filter: FALSE R6_min.cells.per.subj: 3 ## publish to celldepot publish: False In the first run (see the below scAnalyzer section on how to run the pipeline), the user can set runAnalysis: False and use the above default parameters to perform cell filtering and QC. Then this pipeline will only run basic QC checking and output a Bookdown report with QC figures. This step is semi-automated because different dataset may need distinct filtering criteria. The design of this pipeline is to pause here to make sure the filtering step is adequate before running through the whole analysis. Once the filtering step is validated by checking the QC report, the user can change the following settings and run the full analysis: runAnalysis: True overwrite: True 5.2 Prepare the sample meta file Another important file in the sample meta file, a csv file storing data information. Usually it is named as sampleMeta.csv Here is an example with minimal information for the public dataset (for 10X h5 data): Sample_Name,h5path,metapath 5705STDY8058280,~/E-MTAB-11115/data/5705STDY8058280_filtered_feature_bc_matrix.h5,~/E-MTAB-11115/data/5705STDY8058280_annotation.csv 5705STDY8058281,~/E-MTAB-11115/data/5705STDY8058281_filtered_feature_bc_matrix.h5,~/E-MTAB-11115/data/5705STDY8058281_annotation.csv 5705STDY8058282,~/E-MTAB-11115/data/5705STDY8058282_filtered_feature_bc_matrix.h5,~/E-MTAB-11115/data/5705STDY8058282_annotation.csv 5705STDY8058283,~/E-MTAB-11115/data/5705STDY8058283_filtered_feature_bc_matrix.h5,~/E-MTAB-11115/data/5705STDY8058283_annotation.csv 5705STDY8058284,~/E-MTAB-11115/data/5705STDY8058284_filtered_feature_bc_matrix.h5,~/E-MTAB-11115/data/5705STDY8058284_annotation.csv 5705STDY8058285,~/E-MTAB-11115/data/5705STDY8058285_filtered_feature_bc_matrix.h5,~/E-MTAB-11115/data/5705STDY8058285_annotation.csv 5.3 Prepare the comparison file This file is critical for the differential expressed gene (DEG) analysis. In the DEG comparison file, “sample”, “cluster”, “group” and “covars” are the annotation headers, and “alt” and “ref” are the entries from “group” column. The DEG is performing between “alt” and “ref” cells from “group” within each entry of “cluster” considering “sample” variations Here is an example of the DEG comparison file called DEGinfo.csv: sample,cluster,group,alt,ref,covars[+ separated],method[default NEBULA],model[default HL] #####To be added Once the DEGinfo.csv file created, it can be added to the config.yml file: DEG_desp: ~/E-MTAB-11115/processing/DEGinfo.csv 5.4 File hierarchy After downloading the files, usually we save them in the ./data folder. For the config.yml and the sample meta files, we saved them into another folder. For data downloaded in 10X h5 format: E-MTAB-11115/ ├── data ├── 5705STDY8058280_annotation.csv ├── 5705STDY8058280_raw_feature_bc_matrix.h5 ├── 5705STDY8058281_annotation.csv ├── 5705STDY8058281_raw_feature_bc_matrix.h5 ... ├── processing ├── config.yml ├── DEGinfo.csv └── sampleMeta.csv For data downloaded in 10X mtx format: ########To be added 5.5 scAnalyzer To run scAnalyzer, the user can pass the path to the config.yml file to the program. This command can be executed at anywhere on the computer. scAnalyzer Path/to/a/config/file #Example: scAnalyzer ~/E-MTAB-11115/processing/config.yml The output files will be stored in the location designated in the config.yml. 5.6 scRef This pipeline is used to process the current data and add it to the reference. Please be cautious about the following two things: This process will add a Seurat reference data into the scRNAsequest pipeline PERMANENTLY! Please make sure the data provided for reference building is SCT transformed! scRef Path/to/a/config/file #Example: scRef ~/E-MTAB-11115/processing/config.yml "],["results.html", "Chapter 6 Results", " Chapter 6 Results "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
